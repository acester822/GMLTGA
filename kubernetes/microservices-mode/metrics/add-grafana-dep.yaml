apiVersion: v1
kind: ServiceAccount
metadata:
  name: grafana
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: grafana-clusterrole
rules:
- verbs:
  - get
  - watch
  - list
  apiGroups:
  - ''
  resources:
  - configmaps
  - secrets
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: grafana-clusterrolebinding
subjects:
- kind: ServiceAccount
  name: grafana
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: grafana-clusterrole
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: grafana
  name: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      annotations:
        prometheus.io.scrape: "true"
        prometheus.io.port: "3000"
      labels:
        app: grafana
    spec:
      automountServiceAccountToken: true
      containers:
      - env:
        - name: METHOD
          value: WATCH
        - name: LABEL
          value: grafana_dashboard
        - name: LABEL_VALUE
          value: "1"
        - name: FOLDER
          value: /dashboards
        - name: RESOURCE
          value: both
        - name: NAMESPACE
          valueFrom:
            configMapKeyRef:
              key: NAMESPACE
              name: grafana-env
        - name: FOLDER_ANNOTATION
          value: grafana_dashboard_folder
        - name: REQ_USERNAME
          valueFrom:
            secretKeyRef:
              key: admin-user
              name: grafana
        - name: REQ_PASSWORD
          valueFrom:
            secretKeyRef:
              key: admin-password
              name: grafana
        - name: REQ_URL
          value: http://localhost:3000/api/admin/provisioning/dashboards/reload
        - name: REQ_METHOD
          value: POST
        image: quay.io/kiwigrid/k8s-sidecar
        imagePullPolicy: IfNotPresent
        name: grafana-sc-dashboard
        volumeMounts:
        - mountPath: /dashboards
          name: sc-dashboard-volume
      - env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: GF_SECURITY_ADMIN_USER
          valueFrom:
            secretKeyRef:
              key: admin-user
              name: grafana
        - name: GF_SECURITY_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              key: admin-password
              name: grafana
        - name: GF_PATHS_DATA
          value: /var/lib/grafana/
        - name: GF_PATHS_LOGS
          value: /var/log/grafana
        - name: GF_PATHS_PLUGINS
          value: /var/lib/grafana/plugins
        - name: GF_PATHS_PROVISIONING
          value: /etc/grafana/provisioning
        envFrom:
        - configMapRef:
            name: grafana-env
            optional: true
        image: grafana/grafana
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 10
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 60
          timeoutSeconds: 30
        name: grafana
        ports:
        - containerPort: 3000
          name: http-metrics
        - containerPort: 9094
          name: tcp-gossip
        - containerPort: 9094
          name: udp-gossip
          protocol: UDP
        readinessProbe:
          httpGet:
            path: /api/health
            port: 3000
        volumeMounts:
        - mountPath: /etc/grafana/grafana.ini
          name: config
          subPath: grafana.ini
        - mountPath: /var/lib/grafana
          name: storage
        - mountPath: /etc/grafana/provisioning/datasources/datasources.yaml
          name: config
          subPath: datasources.yaml
        - mountPath: /dashboards
          name: sc-dashboard-volume
        - mountPath: /etc/grafana/provisioning/dashboards/sc-dashboardproviders.yaml
          name: sc-dashboard-provider
          subPath: provider.yaml
      enableServiceLinks: true
      serviceAccountName: grafana
      volumes:
      - configMap:
          name: grafana
        name: config
      - emptyDir: {}
        name: storage
      - emptyDir: {}
        name: sc-dashboard-volume
      - configMap:
          name: grafana-config-dashboards
        name: sc-dashboard-provider
