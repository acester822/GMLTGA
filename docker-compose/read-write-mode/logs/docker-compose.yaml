version: '3.9'


# Read-Write mode (Logs)
services:

  agent:
    depends_on:
      loki-write:
        condition: service_healthy
    image: grafana/agent:v0.35.3
    volumes:
      - ../../common/config/agent-flow:/etc/agent-config
      - /var/run/docker.sock:/var/run/docker.sock
    entrypoint:
      - /bin/grafana-agent
      - run
      - /etc/agent-config/logs.river
      - --server.http.listen-addr=0.0.0.0:12345
      - --cluster.enabled=true
      - --disable-reporting=true
    environment:
      - AGENT_MODE=flow
      - AGENT_CONFIG_FOLDER=/etc/agent-config
    healthcheck:
      test: [ "CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:12345/ready || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 10
    ports:
      - "12345:12345"
    networks:
      - read-write-mode-logs

  gateway:
    image: nginxinc/nginx-unprivileged:1.25-alpine
    volumes:
      - ../../common/config/nginx:/etc/nginx/templates
      - ../../common/config/loki/gateway.conf.template:/etc/nginx/templates/gateway_loki.conf.template
    environment:
      - NGINX_ENVSUBST_OUTPUT_DIR=/etc/nginx
      - DISTRIBUTOR_HOST=loki-write
      - INGESTER_HOST=loki-write
      - RULER_HOST=loki-backend
      - QUERY_FRONTEND_HOST=loki-read
      - QUERY_SCHEDULER_HOST=loki-read
      - QUERIER_HOST=loki-read
      - COMPACTOR_HOST=loki-backend
    ports:
      - "3100"
    networks:
      - read-write-mode-logs


  loki-read:
    depends_on:
      minio:
        condition: service_healthy
    image: &lokiImage grafana/loki:2.8.3
    command:
      - -config.file=/etc/loki.yaml
      - -target=read
      - -legacy-read-mode=false
      - -log.level=warn
    volumes:
      - ../../common/config/loki/read-write-mode-logs.yaml:/etc/loki.yaml
    healthcheck:
      test: [ "CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3100/ready || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      replicas: 2
    networks:
      read-write-mode-logs:
        aliases:
          - loki-memberlist

  loki-write:
    depends_on:
      minio:
        condition: service_healthy
    image: *lokiImage
    command:
      - -config.file=/etc/loki.yaml
      - -target=write
    volumes:
      - ../../common/config/loki/read-write-mode-logs.yaml:/etc/loki.yaml
    ports:
      - "3100"
    healthcheck:
      test: [ "CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3100/ready || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      replicas: 3
    networks:
      read-write-mode-logs:
        aliases:
          - loki-memberlist

  loki-backend:
    depends_on:
      minio:
        condition: service_healthy
    image: *lokiImage
    deploy:
      replicas: 2
    command:
      - -config.file=/etc/loki.yaml
      - -target=backend
      - -legacy-read-mode=false
    volumes:
      - ../../common/config/loki/read-write-mode-logs.yaml:/etc/loki.yaml
    healthcheck:
      test: [ "CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3100/ready || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - read-write-mode-logs

  grafana:
    image: grafana/grafana:10.0.3
    command:
      - --config=/etc/grafana-config/grafana.ini
    volumes:
      - ../../common/config/grafana/grafana.ini:/etc/grafana-config/grafana.ini
      - ../../common/config/grafana/dashboards:/var/lib/grafana/dashboards
      - ../../common/config/grafana/provisioning:/etc/grafana/provisioning
      - ./config/grafana/datasources:/etc/grafana/provisioning/datasources
    environment:
      - GF_LOG_LEVEL=warn
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD:-admin_password}
    ports:
      - "3000:3000"
    networks:
      - read-write-mode-logs

  minio:
    image: minio/minio:RELEASE.2023-07-21T21-12-44Z
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /data/loki-data /data/loki-rules && \
        minio server /data --console-address ':9001'
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=admin_password
      - MINIO_PROMETHEUS_AUTH_TYPE=public
      - MINIO_UPDATE=off
    volumes:
      - data-minio:/data:delegated
    healthcheck:
      test: ["CMD", "curl","-f","http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "9001:9001"
    networks:
      - read-write-mode-logs

networks:
  read-write-mode-logs:

volumes:
  data-minio:
    driver: local
