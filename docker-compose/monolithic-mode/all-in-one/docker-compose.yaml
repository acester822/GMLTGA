version: '3.9'

# Note: 
# include is available in Docker Compose version 2.20 and later, and Docker Desktop version 4.22 and later.
include:
  - path: ../../common/compose-include/minio.yaml

# Monolithic mode (Metrics + Logs + Traces + Profiles)
services:
  agent:
    depends_on:
      tempo:
        condition: service_started
      mimir:
        condition: service_healthy
      loki:
        condition: service_healthy
    image: grafana/agent:v0.35.3
    volumes:
      - ../../common/config/agent-flow:/etc/agent-config
      - /var/run/docker.sock:/var/run/docker.sock
    entrypoint:
      - /bin/grafana-agent
      - run
      - /etc/agent-config/monolithic-mode-all.river
      - --server.http.listen-addr=0.0.0.0:12345
      - --cluster.enabled=true
      - --disable-reporting=true
    environment:
      - AGENT_MODE=flow
      - AGENT_CONFIG_FOLDER=/etc/agent-config
    healthcheck:
      test: [ "CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:12345/ready || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 10
    ports:
      - "12345:12345"

  mimir:
    depends_on:
      minio:
        condition: service_healthy
    image: grafana/mimir:2.9.0
    command:
      - -config.file=/etc/mimir.yaml
      - -target=all
      - -log.level=error
    volumes:
      - ../../common/config/mimir/monolithic-mode-metrics.yaml:/etc/mimir.yaml
    healthcheck:
      test: [ "CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:8080/ready || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      replicas: 1
    networks:
      default:
        aliases:
          - mimir-memberlist

  load-mimir-rules:
    depends_on:
      mimir:
        condition: service_healthy
    image: grafana/mimirtool:2.9.0
    volumes:
      - ../../../monitoring-mixins/mimir-mixin/deploy/rules.yaml:/mimir-mixin/rules.yaml
      - ../../../monitoring-mixins/mimir-mixin/deploy/alerts.yaml:/mimir-mixin/alerts.yaml
    environment:
      - MIMIR_ADDRESS=http://mimir:8080
      - MIMIR_TENANT_ID=anonymous
    command: >-
      rules load /mimir-mixin/rules.yaml /mimir-mixin/alerts.yaml

  loki:
    depends_on:
      minio:
        condition: service_healthy
    image: grafana/loki:2.8.3
    command:
      - -config.file=/etc/loki.yaml
      - -target=all
      - -log.level=error
    volumes:
      - ../../common/config/loki/monolithic-mode-logs.yaml:/etc/loki.yaml
    healthcheck:
      test: [ "CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3100/ready || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      replicas: 1
    networks:
      default:
        aliases:
          - loki-memberlist

  load-loki-rules:
    depends_on:
      loki:
        condition: service_healthy
    image: grafana/mimirtool:2.9.0
    volumes:
      - ../../../monitoring-mixins/loki-mixin/deploy/rules.yaml:/loki-mixin/rules.yaml
      - ../../../monitoring-mixins/loki-mixin/deploy/alerts.yaml:/loki-mixin/alerts.yaml
    environment:
      - MIMIR_ADDRESS=http://mimir:8080
      - MIMIR_TENANT_ID=anonymous
    command: >-
      rules load /loki-mixin/rules.yaml /loki-mixin/alerts.yaml

  tempo:
    depends_on:
      minio:
        condition: service_healthy
      mimir:
        condition: service_healthy
    image: grafana/tempo:2.2.0
    volumes:
      - ../../common/config/tempo/monolithic-mode-traces.yaml:/etc/tempo.yaml
    command:
      - -config.file=/etc/tempo.yaml
      - -target=all
      - -log.level=error
    ports:
      - "3200"
    healthcheck:
      test: [ "CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3200/ready || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5

  load-tempo-rules:
    depends_on:
      tempo:
        condition: service_healthy
    image: grafana/mimirtool:2.9.0
    volumes:
      - ../../../monitoring-mixins/tempo-mixin/deploy/rules.yaml:/tempo-mixin/rules.yaml
      - ../../../monitoring-mixins/tempo-mixin/deploy/alerts.yaml:/tempo-mixin/alerts.yaml
    environment:
      - MIMIR_ADDRESS=http://mimir:8080
      - MIMIR_TENANT_ID=anonymous
    command: >-
      rules load /tempo-mixin/rules.yaml /tempo-mixin/alerts.yaml

  pyroscope:
    image: grafana/phlare:weekly-f22-06e09923
    volumes:
      - ../../common/config/pyroscope/monolithic-mode-profiles.yaml:/etc/pyroscope.yaml
    command:
      - -config.file=/etc/pyroscope.yaml
      - -log.level=warn
    # ports:
    #   - "4100:4100"

  grafana:
    image: grafana/grafana:10.0.3
    command:
      - --config=/etc/grafana-config/grafana.ini
    volumes:
      - ../../common/config/grafana/grafana.ini:/etc/grafana-config/grafana.ini
      - ../../common/config/grafana/dashboards:/var/lib/grafana/dashboards
      - ../../common/config/grafana/provisioning:/etc/grafana/provisioning
      - ./config/grafana/datasources:/etc/grafana/provisioning/datasources
      - ../../../monitoring-mixins/mimir-mixin/deploy/dashboards_out:/var/lib/grafana/dashboards/mimir-mixin  # load mimir dashboards
      - ../../../monitoring-mixins/loki-mixin/deploy/dashboards_out:/var/lib/grafana/dashboards/loki-mixin    # load loki dashboards
      - ../../../monitoring-mixins/tempo-mixin/deploy/dashboards_out:/var/lib/grafana/dashboards/tempo-mixin  # load tempo dashboards
    environment:
      - GF_LOG_LEVEL=error
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD:-admin_password}
      - GF_FEATURE_TOGGLES_ENABLE=traceqlEditor,pyroscopeFlameGraph
      - GF_DIAGNOSTICS_PROFILING_ENABLED=true
      - GF_DIAGNOSTICS_PROFILING_ADDR=0.0.0.0
      - GF_DIAGNOSTICS_PROFILING_PORT=6060
      - GF_TRACING_OPENTELEMETRY_OTLP_ADDRESS=agent:4317
      - GF_TRACING_OPENTELEMETRY_CUSTOM_ATTRIBUTES=cluster:docker-compose,namespace:monitoring
      # - GF_INSTALL_PLUGINS=pyroscope-datasource,pyroscope-panel
    ports:
      - "3000:3000"

