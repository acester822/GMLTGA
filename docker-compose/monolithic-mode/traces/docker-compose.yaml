version: '3.9'


# Monolithic mode (Traces)
services:

  agent:
    depends_on:
      tempo:
        condition: service_started
    image: grafana/agent:v0.35.2
    volumes:
      - ../../common/config/agent-flow:/etc/agent-config
      - /var/run/docker.sock:/var/run/docker.sock
    entrypoint:
      - /bin/grafana-agent
      - run
      - /etc/agent-config/monolithic-mode-traces.river # Note: Agent use monolithic-mode-traces.river
      - --server.http.listen-addr=0.0.0.0:12345
      - --cluster.enabled=true
      - --disable-reporting=true
    environment:
      - AGENT_MODE=flow
      - AGENT_CONFIG_FOLDER=/etc/agent-config
    ports:
      - "12345:12345"
    networks:
      - monolithic-mode-traces

  tempo:
    depends_on:
      minio:
        condition: service_healthy
    image: &tempoImage grafana/tempo:2.2.0
    restart: always
    volumes:
      - ./config/tempo/scalable-single-binary.yaml:/etc/tempo.yaml # Note: Tempo use scalable-single-binary.yaml
    command:
      - -config.file=/etc/tempo.yaml
      - -target=scalable-single-binary
      - -log.level=error
    # ports:
    #   - "3200:3200"
    networks:
      - monolithic-mode-traces

  # Horizontally scale up support(Monolithic mode)
  # https://grafana.com/docs/tempo/latest/setup/deployment/#scaling-monolithic-mode
  tempo-2:
    depends_on:
      minio:
        condition: service_healthy
    image: *tempoImage
    restart: always
    volumes:
      - ./config/tempo/scalable-single-binary.yaml:/etc/tempo.yaml # Note: Tempo use scalable-single-binary.yaml
    command:
      - -config.file=/etc/tempo.yaml
      - -target=scalable-single-binary
    networks:
      - monolithic-mode-traces

  # Horizontally scale up support(Monolithic mode)
  # https://grafana.com/docs/tempo/latest/setup/deployment/#scaling-monolithic-mode
  tempo-n:
    depends_on:
      minio:
        condition: service_healthy
    image: *tempoImage
    restart: always
    volumes:
      - ./config/tempo/scalable-single-binary.yaml:/etc/tempo.yaml # Note: Tempo use scalable-single-binary.yaml
    command:
      - -config.file=/etc/tempo.yaml
      - -target=scalable-single-binary
    networks:
      - monolithic-mode-traces

  grafana:
    image: grafana/grafana:10.0.3
    command:
      - --config=/etc/grafana-config/grafana.ini
    volumes:
      - ../../common/config/grafana/grafana.ini:/etc/grafana-config/grafana.ini
      - ../../common/config/grafana/dashboards:/var/lib/grafana/dashboards
      - ../../common/config/grafana/provisioning:/etc/grafana/provisioning
      - ./config/grafana/datasources:/etc/grafana/provisioning/datasources
    environment:
      - GF_LOG_LEVEL=error
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD:-admin_password}
      - GF_FEATURE_TOGGLES_ENABLE=traceqlEditor
      - GF_TRACING_OPENTELEMETRY_OTLP_ADDRESS=agent:4317
      - GF_TRACING_OPENTELEMETRY_CUSTOM_ATTRIBUTES=cluster:docker-compose,namespace:monitoring
    ports:
      - "3000:3000"
    networks:
      - monolithic-mode-traces

  minio:
    image: minio/minio:RELEASE.2023-07-21T21-12-44Z
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /data/tempo-data  && \
        minio server /data --console-address ':9001'
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=admin_password
      - MINIO_PROMETHEUS_AUTH_TYPE=public
      - MINIO_UPDATE=off
    volumes:
      - data-minio:/data:delegated
    healthcheck:
      test: ["CMD", "curl","-f","http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "9001:9001"
    networks:
      - monolithic-mode-traces

networks:
  monolithic-mode-traces:

volumes:
  data-minio:
    driver: local
